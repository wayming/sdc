// Code generated by MockGen. DO NOT EDIT.
// Source: data_exporters.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIDataExporter is a mock of IDataExporter interface.
type MockIDataExporter struct {
	ctrl     *gomock.Controller
	recorder *MockIDataExporterMockRecorder
}

// MockIDataExporterMockRecorder is the mock recorder for MockIDataExporter.
type MockIDataExporterMockRecorder struct {
	mock *MockIDataExporter
}

// NewMockIDataExporter creates a new mock instance.
func NewMockIDataExporter(ctrl *gomock.Controller) *MockIDataExporter {
	mock := &MockIDataExporter{ctrl: ctrl}
	mock.recorder = &MockIDataExporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDataExporter) EXPECT() *MockIDataExporterMockRecorder {
	return m.recorder
}

// Export mocks base method.
func (m *MockIDataExporter) Export(entityType reflect.Type, table, data, symbol string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Export", entityType, table, data, symbol)
	ret0, _ := ret[0].(error)
	return ret0
}

// Export indicates an expected call of Export.
func (mr *MockIDataExporterMockRecorder) Export(entityType, table, data, symbol interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Export", reflect.TypeOf((*MockIDataExporter)(nil).Export), entityType, table, data, symbol)
}
