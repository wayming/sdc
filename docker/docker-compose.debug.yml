version: '3.4'

services:
  collector:
    image: stock_data_collector
    build:
      context: .
      dockerfile: ./Dockerfile.sdc
    volumes:
      - ..:/home/appuser
      - /tmp/.X11-unix:/tmp/.X11-unix
    command: ["bash", "/home/appuser/docker/stock_data_collector_init.sh"]
    ports:
      - "5001:5001"
    environment:
      - DISPLAY=:1
      - QT_DEBUG_PLUGINS=1
      # - TZ=Australia/Brisbane
      - PGHOST=postgres
      - PGPORT=5432
      - PGUSER=appuser
      - PGPASSFILE=/run/secrets/pg_pass_file
      - PGDATABASE=stock_data
      - MSACCESSKEYFILE=/run/secrets/market_stack_access_key
      - REDISHOST=redis
      - REDISPORT=6379
      - PROXYUSER=tqgpmvtg
      - PROXYKEYFILE=/run/secrets/proxy_pass_file
      - "/dev/dri/card0:/dev/dri/card0"
    depends_on:
      - postgres
      - redis
    deploy:
      replicas: 1
    networks:
      - overlay_network
    secrets:
      - source: pg_pass_file
        target: pg_pass_file
        mode: 0400
        uid: '1000'  # appuser
        gid: '1000'  # appuser
      - source: proxy_pass_file
        target: proxy_pass_file
        mode: 0400
        uid: '1000'  # appuser
        gid: '1000'  # appuser
      - source: market_stack_access_key
        target: market_stack_access_key
        mode: 0400
        uid: '1000'  # appuser
        gid: '1000'  # appuser

  scraper:
    image: scraper
    volumes:
      - ../htmlscraper:/app
    deploy:
      replicas: 10
    networks:
      - overlay_network

  postgres:
    image: postgres_sdc
    restart: always
    environment:
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD_FILE=/run/secrets/pg_pass_file
      - POSTGRES_DB=stock_data
      - PGID=1000
      - PGGID=1000
    ports:
      - "5432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
      - ./pg_log:/var/log/postgresql
    deploy:
      replicas: 1
    networks:
      - overlay_network
    secrets:
      - pg_pass_file

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_PASSWORD_FILE=/run/secrets/pgadmin_pass_file
      - PGADMIN_DEFAULT_EMAIL=wayming.z@gmail.com
      #- PGADMIN_DEFAULT_PASSWORD=appuser
      - PGADMIN_LISTEN_ADDRESS=[::]
      - PGADMIN_DEFAULT_SERVER=postgres
      - PGADMIN_DEFAULT_SERVER_GROUP=Servers
      - PGADMIN_DATA_DIR=/home/
    depends_on:
      - postgres
    deploy:
      replicas: 1
    networks:
      - overlay_network
    secrets:
      - source: pgadmin_pass_file
        target: pgadmin_pass_file
        # mode: 0400
        # uid: '1000'  # appuser
        # gid: '1000'  #appuser

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - overlay_network

  openbb: 
    image: openbb
    build:
      context: .
      dockerfile: ./Dockerfile.openbb
    volumes:
      - ..:/home/appuser
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./openbb_platform:/root/.openbb_platform
    ports:
      - "6900:6900"
    deploy:
      replicas: 1
    networks:
      - overlay_network

  nginx:
      image: nginx:latest
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
      depends_on:
        - openbb
      ports:
        - "4000:4000"
      networks:
        - overlay_network

secrets:
  pg_pass_file:
    # generated from docker secret command
    # echo "password" | docker secret create pg_pass_file -
    external: true
  pgadmin_pass_file:
    # generated from docker secret command
    # echo "password" | docker secret create pgadmin_pass_file -
    external: true
  market_stack_access_key:
    # generated from docker secret command
    # echo "accesskey" | docker secret create market_stack_access_key -
    external: true
  proxy_pass_file:
    # generated from docker secret command
    # echo "password" | docker secret create proxy_pass_file -
    external: true


networks:
  overlay_network:
    driver: overlay